name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
  workflow_dispatch:

env:
  PNPM_VERSION: '10.8.1'
  NODE_VERSION: '20'
  PNPM_CACHE_FOLDER: .pnpm-store

# Отмена предыдущих workflow в той же ветке
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 🔧 Повторно используемый шаг для настройки окружения
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-dependencies.outputs.cache-primary-key }}
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 💾 Cache PNPM store
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📥 Install dependencies
        run: |
          pnpm config set store-dir ${{ env.PNPM_CACHE_FOLDER }}
          pnpm install --frozen-lockfile --prefer-offline

  # Проверка качества кода
  quality:
    name: 🧪 Quality Checks
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        task: [lint-ts, lint-scss, test]
        include:
          - task: lint-ts
            name: TypeScript Linting
            command: pnpm lint:ts
          - task: lint-scss
            name: SCSS Linting
            command: pnpm lint:scss
          - task: test
            name: Unit Tests
            command: pnpm test

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 📦 Setup PNPM (reuse)
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 💾 Restore PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ needs.setup.outputs.cache-key }}

      - name: 🔍 Run ${{ matrix.name }}
        run: ${{ matrix.command }}

      - name: 📊 Upload test results
        if: matrix.task == 'test' && always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: junit.xml
          retention-days: 14

      - name: 📝 Upload coverage report
        if: matrix.task == 'test' && success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit-tests
          fail_ci_if_error: false

  # Сборка проекта
  build:
    name: 🏗️ Build Project
    needs: quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 📦 Setup PNPM (reuse)
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 💾 Restore PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ needs.setup.outputs.cache-key }}

      - name: 🏗️ Build application
        run: pnpm build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/
          retention-days: 14
          if-no-files-found: error

  # Сборка Storybook
  storybook:
    name: 📚 Build Storybook
    needs: quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 📦 Setup PNPM (reuse)
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 💾 Restore PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ needs.setup.outputs.cache-key }}

      - name: 🏗️ Build Storybook
        run: pnpm build-storybook

      - name: 📦 Upload Storybook artifacts
        uses: actions/upload-artifact@v4
        with:
          name: storybook-${{ github.sha }}
          path: storybook-static/
          retention-days: 14
          if-no-files-found: error

  # Деплой на GitHub Pages
  deploy-gh-pages:
    name: 🚀 Deploy to GitHub Pages
    needs: [build, storybook]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/

      - name: 📥 Download Storybook artifacts
        uses: actions/download-artifact@v4
        with:
          name: storybook-${{ github.sha }}
          path: dist/storybook/

      - name: 🚀 Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          clean: true
